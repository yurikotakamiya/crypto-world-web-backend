exports.up = function(knex) {
  return knex.schema.createTable('users', tbl => {
    tbl.increments('user_id').unsigned().primary()
    tbl.string('username', 64).unique().notNullable()
    tbl.string('password', 64).notNullable()
    tbl.string('email', 64).unique().notNullable()
  })
  .createTable('secret_keys', tbl => {
    tbl.integer('user_id')
      .unsigned()    
      .notNullable()
      .references('user_id')
      .inTable('users')
    tbl.string('secret_key').notNullable()
    tbl.dateTime('expiration').notNullable()
  })
  .createTable('strategies', tbl => {
    tbl.tinyint('strategy_id').unsigned().primary()
    tbl.string('strategy_name', 64).notNullable()
    tbl.text('description').notNullable()
  })
  .createTable('order_sides', tbl => {
    tbl.tinyint('order_side_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('order_actions', tbl => {
    tbl.tinyint('order_action_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('order_states', tbl => {
    tbl.tinyint('order_state_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('order_types', tbl => {
    tbl.tinyint('order_type_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('exchanges', tbl => {
    tbl.tinyint('exchange_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('trading_pairs', tbl => {
    tbl.tinyint('trading_pair_id').unsigned().primary()
    tbl.string('description', 16)
  })
  .createTable('time_in_forces', tbl => {
    tbl.tinyint('time_in_force_id').unsigned().primary()
    tbl.string('description', 8)
  })
  .createTable('orders', tbl => {
    tbl.bigint('order_id').unsigned().notNullable().primary()
    tbl.integer('user_id')
      .unsigned()
      .notNullable()
      .references('user_id')
      .inTable('users')
    tbl.string('client_order_id', 32)
    tbl.tinyint('order_time_in_force_id')
      .unsigned()
      .notNullable()
      .references('time_in_force_id')
      .inTable('time_in_forces')
    tbl.double('order_executed_quantity')
    tbl.tinyint('strategy_id')
      .unsigned()
      .notNullable()
      .references('strategy_id')
      .inTable('strategies')
    tbl.tinyint('trading_pair_id')
      .unsigned()
      .notNullable()
      .references('trading_pair_id')
      .inTable('trading_pairs')
    tbl.double('order_size').notNullable()
    tbl.double('order_price').notNullable()
    tbl.tinyint('order_side_id')
      .unsigned()
      .notNullable()
      .references('order_side_id')
      .inTable('order_sides')
    tbl.timestamp('create_time', { precision: 3 }).defaultTo(knex.fn.now(3))
    tbl.timestamp('update_time', { precision: 3 }).defaultTo(knex.fn.now(3))
    tbl.tinyint('order_action_id')
      .unsigned()
      .notNullable()
      .references('order_action_id')
      .inTable('order_actions')
    tbl.tinyint('order_state_id')
      .unsigned()
      .notNullable()
      .references('order_state_id')
      .inTable('order_states')
    tbl.double('order_leaves_quantity')
    tbl.tinyint('order_type_id')
      .unsigned()
      .notNullable()
      .references('order_type_id')
      .inTable('order_types')
    tbl.integer('version')
  })
  .createTable('order_history', tbl => {
    tbl.bigint('order_id').unsigned().notNullable()
    tbl.integer('user_id')
      .unsigned()
      .notNullable()
      .references('user_id')
      .inTable('users')
    tbl.tinyint('strategy_id')
      .unsigned()
      .notNullable()
      .references('strategy_id')
      .inTable('strategies')
    tbl.tinyint('trading_pair_id')
      .unsigned()
      .notNullable()
      .references('trading_pair_id')
      .inTable('trading_pairs')
    tbl.double('order_size').notNullable()
    tbl.double('order_price').notNullable()
    tbl.tinyint('order_side_id')
      .unsigned()
      .notNullable()
      .references('order_side_id')
      .inTable('order_sides')
    tbl.timestamp('create_time', { precision: 3 }).defaultTo(knex.fn.now(3))
    tbl.timestamp('update_time', { precision: 3 }).defaultTo(knex.fn.now(3))
    tbl.tinyint('order_action_id')
      .unsigned()
      .notNullable()
      .references('order_action_id')
      .inTable('order_actions')
    tbl.tinyint('order_state_id')
      .unsigned()
      .notNullable()
      .references('order_state_id')
      .inTable('order_states')
    tbl.double('order_leaves_quantity')
    tbl.tinyint('order_type_id')
      .unsigned()
      .notNullable()
      .references('order_type_id')
      .inTable('order_types')
    tbl.integer('version')
    tbl.primary(['order_id', 'version'])
  })
  .createTable('trades', tbl => {
    tbl.bigint('trade_id').unsigned().notNullable().primary()
    tbl.bigint('order_id')
      .unsigned()
      .notNullable()
      .references('order_id')
      .inTable('orders')
    tbl.double('trade_notional')
    tbl.tinyint('trade_time_in_force_id')
      .unsigned()
      .notNullable()
      .references('time_in_force_id')
      .inTable('time_in_forces')
    tbl.integer('user_id')
    .unsigned()
    .notNullable()
    .references('user_id')
    .inTable('users')
    tbl.tinyint('strategy_id')
      .unsigned()
      .notNullable()
      .references('strategy_id')
      .inTable('strategies')
    tbl.tinyint('trading_pair_id')
      .unsigned()
      .notNullable()
      .references('trading_pair_id')
      .inTable('trading_pairs')
    tbl.double('trade_size').notNullable()
    tbl.double('trade_price').notNullable()
    tbl.tinyint('trade_side_id')
      .unsigned()
      .notNullable()
      .references('order_side_id')
      .inTable('order_sides')
    tbl.tinyint('trade_type_id')
      .unsigned()
      .notNullable()
      .references('order_type_id')
      .inTable('order_types')
    tbl.timestamp('execution_time', { precision: 3 }).defaultTo(knex.fn.now(3))
  })
  .createTable('api_keys', tbl => {
    tbl.integer('user_id')
      .unsigned()    
      .notNullable()
      .references('user_id')
      .inTable('users')
    tbl.tinyint('exchange_id')
      .unsigned()
      .notNullable()
      .references('exchange_id')
      .inTable('exchanges')
    tbl.string('api_key').notNullable()
    tbl.string('secret_key').notNullable()
    tbl.primary(['user_id', 'exchange_id'])
  })
  .createTable('strategy_configs', tbl => {
    tbl.integer('user_id')
      .unsigned()    
      .notNullable()
      .references('user_id')
      .inTable('users')
    tbl.tinyint('exchange_id')
      .unsigned()
      .notNullable()
      .references('exchange_id')
      .inTable('exchanges')
    tbl.tinyint('trading_pair_id')
      .unsigned()
      .notNullable()
      .references('trading_pair_id')
      .inTable('trading_pairs')
    tbl.tinyint('strategy_id')
      .unsigned()
      .notNullable()
      .references('strategy_id')
      .inTable('strategies')
    tbl.double('param_interval_start_price')
    tbl.double('param_interval_order_size')
    tbl.double('param_interval_price_interval')
    tbl.double('param_interval_profit_price_change')
    tbl.primary(['user_id', 'exchange_id', 'trading_pair_id', 'strategy_id'])
  })
};

exports.down = function(knex) {
    return knex.schema
    .dropTableIfExists('secret_keys')
    .dropTableIfExists('users')
    .dropTableIfExists('strategies')
    .dropTableIfExists('orders')
    .dropTableIfExists('order_history')
    .dropTableIfExists('order_sides')
    .dropTableIfExists('order_actions')
    .dropTableIfExists('order_states')
    .dropTableIfExists('order_types')
    .dropTableIfExists('exchanges')
    .dropTableIfExists('trading_pairs')
    .dropTableIfExists('api_keys')
    .dropTableIfExists('strategy_configs')
    .dropTableIfExists('time_in_forces')
};
